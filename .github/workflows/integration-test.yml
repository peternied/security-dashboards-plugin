name: Integration Tests

on: [push, pull_request]

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  OPENSEARCH_VERSION: 3.0.0
  PLUGIN_NAME: opensearch-security

jobs:
  tests:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: browser-actions/setup-geckodriver@latest
      - run: geckodriver --version

      - uses: browser-actions/setup-firefox@latest
      - run: firefox --version
          
      - name: Download OpenSearch Security Plugin
        run: wget -O opensearch-security.zip https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/3.0.0/latest/linux/x64/tar/builds/opensearch/plugins/opensearch-security-3.0.0.0.zip

      - run: mkdir -p ./build/distributions
      - run: mv opensearch-security.zip ./build/distributions/opensearch-security-3.0.0.zip
      - run: pwd || ls || ls ./build/distributions

      - name: Create Setup Script
        run: |
          cat > setup.sh <<'EOF'
          chmod +x  ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh 
          /bin/bash -c "yes | ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh"
          EOF

      - run: pwd || ls

      - name: Run Opensearch with A Single Plugin
        uses: opensearch-project/security/.github/actions/start-opensearch-with-one-plugin@main
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
          plugin-name: ${{ env.PLUGIN_NAME }}
          setup-script-name: setup

      - id: install-dashboards
        uses: ./.github/actions/install-dashboards
        with:
           plugin_name: security-dashboards-plugin

      - name: Start Dashboards in background
        run: node scripts/build_opensearch_dashboards_platform_plugins.js
        working-directory: ${{ steps.install-dashboards.outputs.dashboards-directory }}

      - name: Run integration tests
        run: |
          echo "check if opensearch is ready"
          curl -XGET https://localhost:9200 -u 'admin:admin' -k
          yarn test:jest_server --coverage
        working-directory: ${{ steps.install-dashboards.outputs.plugin-directory }}
